{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fares\\\\Desktop\\\\ProgrammingStuff\\\\projects\\\\manopoly\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport Login from \"./components/Login\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./components/HomePage\";\nimport Board from \"./components/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [player, setPlayer] = useState({\n    name: \"\",\n    id: -1,\n    isLoggedIn: false,\n    boardId: -1\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:8080/players/checkCookie\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Could not create a new player.\");\n      }\n      return response.text();\n    }).then(data => {\n      if (data) {\n        data = JSON.parse(data);\n        let newPlayer = {\n          name: data.name,\n          id: Number(data.playerId),\n          isLoggedIn: true,\n          boardId: Number(data.boardId)\n        };\n        setPlayer(newPlayer);\n      }\n    }).catch(error => console.error(error));\n  }, []);\n\n  // make sure player goes to correct board if a board is already allocated\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: player.isLoggedIn ? Number(player.boardId) === -1 ? /*#__PURE__*/_jsxDEV(HomePage, {\n      player: player,\n      setPlayer: setPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Board, {\n      player: player,\n      setPlayer: setPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      player: player,\n      setPlayer: setPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bwAhSL7i0f6NCzlhGkmAFLWb2c4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Login","useState","HomePage","Board","jsxDEV","_jsxDEV","App","_s","player","setPlayer","name","id","isLoggedIn","boardId","fetch","method","credentials","then","response","ok","Error","text","data","JSON","parse","newPlayer","Number","playerId","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Fares/Desktop/ProgrammingStuff/projects/manopoly/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport Login from \"./components/Login\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./components/HomePage\";\nimport Board from \"./components/Board\";\n\nfunction App() {\n  const [player, setPlayer] = useState({ name: \"\", id: -1, isLoggedIn: false, boardId: -1 });\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/players/checkCookie\", {\n      method: \"GET\",\n      credentials: \"include\",\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Could not create a new player.\");\n        }\n\n        return response.text();\n      })\n      .then((data) => {\n        if (data) {\n          data = JSON.parse(data);\n\n          let newPlayer = {\n            name: data.name,\n            id: Number(data.playerId),\n            isLoggedIn: true,\n            boardId: Number(data.boardId),\n          };\n\n          setPlayer(newPlayer);\n        }\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  // make sure player goes to correct board if a board is already allocated\n  return (\n    <div className=\"App\">\n      {player.isLoggedIn ? (\n        Number(player.boardId) === -1 ? (\n          <HomePage player={player} setPlayer={setPlayer} />\n        ): (\n          <Board player={player} setPlayer={setPlayer}/>\n        )\n      ) : (\n        <Login player={player} setPlayer={setPlayer} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IAAES,IAAI,EAAE,EAAE;IAAEC,EAAE,EAAE,CAAC,CAAC;IAAEC,UAAU,EAAE,KAAK;IAAEC,OAAO,EAAE,CAAC;EAAE,CAAC,CAAC;EAE1Fd,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,2CAA2C,EAAE;MACjDC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACf,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACnD;MAEA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd,IAAIA,IAAI,EAAE;QACRA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;QAEvB,IAAIG,SAAS,GAAG;UACdf,IAAI,EAAEY,IAAI,CAACZ,IAAI;UACfC,EAAE,EAAEe,MAAM,CAACJ,IAAI,CAACK,QAAQ,CAAC;UACzBf,UAAU,EAAE,IAAI;UAChBC,OAAO,EAAEa,MAAM,CAACJ,IAAI,CAACT,OAAO;QAC9B,CAAC;QAEDJ,SAAS,CAACgB,SAAS,CAAC;MACtB;IACF,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACExB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBxB,MAAM,CAACI,UAAU,GAChBc,MAAM,CAAClB,MAAM,CAACK,OAAO,CAAC,KAAK,CAAC,CAAC,gBAC3BR,OAAA,CAACH,QAAQ;MAACM,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElD/B,OAAA,CAACF,KAAK;MAACK,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAC9C,gBAED/B,OAAA,CAACL,KAAK;MAACQ,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC/C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC7B,EAAA,CA9CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}